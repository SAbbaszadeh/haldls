#!/usr/bin/env python

from os.path import join
from waflib.extras.gtest import summary
from waflib.extras.symwaf2ic import get_toplevel_path


def depends(ctx):
    ctx('haldls', 'pyhaldls')
    ctx('haldls', 'pystadls')
    ctx('halco', 'pyhalco')
    ctx('code-format')


def options(opt):
    opt.load('pytest')
    opt.load('pylint')
    opt.load('pycodestyle')


def configure(cfg):
    cfg.load('python')
    cfg.check_python_version()
    cfg.check_python_headers()
    cfg.load('pytest')
    cfg.load('pylint')
    cfg.load('pycodestyle')


def build(bld):
    bld(name='dlens_v2',
        features='py pylint pycodestyle',
        source = bld.path.ant_glob('dlens_v2/**/*.py'),
        relative_trick=True,
        use = ['pyhaldls_v2',
               'pystadls_v2',
               'pyhalco_hicann_dls_v2'
        ],
        install_path = '${PREFIX}/lib',
        pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle")
    )

    bld(name='dlens_vx',
        features='py pylint pycodestyle',
        source = bld.path.ant_glob('dlens_vx/**/*.py'),
        relative_trick=True,
        use = ['pyhaldls_vx',
               'pystadls_vx',
               'pyhalco_hicann_dls_vx'
        ],
        install_path = '${PREFIX}/lib',
        pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle")
    )

    bld(name='dlens_swtest_v2',
        tests='tests/dlens_swtest_v2.py',
        features='use pytest pylint pycodestyle',
        use=['dlens_v2'],
        install_path='${PREFIX}/bin',
        pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle")
    )

    bld(name='dlens_swtest_vx',
        tests='tests/dlens_swtest_vx.py',
        features='use pytest pylint pycodestyle',
        use=['dlens_vx'],
        install_path='${PREFIX}/bin',
        pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle")
    )

    bld(name='dlens_hwtest_vx',
        tests='tests/dlens_hwtest_vx.py',
        features='use pytest pylint pycodestyle',
        use=['dlens_vx'],
        install_path='${PREFIX}/bin',
        pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
        skip_run=not bld.env.DLSvx_HARDWARE_AVAILABLE
    )

    bld(
        name = 'run_ppu_program_v2_py',
        features = 'use py pylint pycodestyle',
        source = 'tools/v2/run_ppu_program.py',
        use = ['dlens_v2'],
        install_path = '${PREFIX}/lib',
        pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
    )

    bld(
        name = 'run_ppu_program_vx_py',
        features = 'use py pylint pycodestyle',
        source = 'tools/vx/run_ppu_program.py',
        use = ['dlens_vx'],
        install_path = '${PREFIX}/lib',
        pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
    )

    bld.add_post_fun(summary)
