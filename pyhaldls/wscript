#!/usr/bin/env python

from waflib.extras import symwaf2ic
from waflib.extras.gtest import summary

def depends(ctx):
    ctx('pyublas')
    ctx('pywrap')
    ctx('haldls')
    ctx('halco', 'pyhalco')

def options(opt):
    pass

def configure(cfg):
    cfg.load('compiler_cxx')
    cfg.load('python')
    cfg.check_python_version()
    cfg.check_python_headers()
    cfg.load('pytest')
    cfg.load('genpybind')

    if cfg.env.with_pybind:
        cfg.check(
            compiler='cxx',
            features='cxx pyembed',
            uselib_store='PYBIND11HALDLS',
            mandatory=True,
            header_name='pybind11/pybind11.h',
        )

def build(bld):
    if not bld.env.with_pybind:
        bld.fatal('building pyhaldls requires pybind')

    bld(
        target='pyhaldls_v2',
        source='../include/haldls/v2/container.h',
        genpybind_tags='haldls_v2',
        features='genpybind cxx cxxshlib pyext post_task',
        use=['haldls_v2', 'PYBIND11HALDLS'],
        install_path='${PREFIX}/lib',
        linkflags='-Wl,-z,defs',
        post_task=['pyhalco_hicann_dls_v2', 'pyhaldls_test_v2'],
    )


    bld(
        name='pyhaldls_test_v2',
        tests='test/pyhaldls_test_v2.py',
        features='use pytest',
        use=['pyhalco_hicann_dls_v2', 'pyhaldls_v2', 'pyhalco_common_files'],
        install_path='${PREFIX}/bin',
        pythonpath=['test'],
    )

    bld(
        target='pyhaldls_vx',
        source='../include/haldls/vx/container.h',
        genpybind_tags='haldls_vx',
        features='genpybind cxx cxxshlib pyext post_task',
        use=['haldls_vx', 'PYBIND11HALDLS'],
        install_path='${PREFIX}/lib',
        linkflags='-Wl,-z,defs',
        post_task=['pyhalco_hicann_dls_vx', 'pyfisch_vx'],
    )

    bld.add_post_fun(summary)
