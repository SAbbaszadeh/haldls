#!/usr/bin/env python
import os
from waflib.extras.gtest import summary


def depends(ctx):
    ctx('pyublas')
    ctx('pywrap')
    ctx('haldls')
    ctx('halco', 'pyhalco')
    ctx('logger', 'pylogging')

def options(opt):
    pass

def configure(cfg):
    cfg.load('compiler_cxx')
    cfg.load('python')
    cfg.check_python_version()
    cfg.check_python_headers()
    cfg.load('pytest')
    cfg.load('genpybind')

    if cfg.env.with_pybind:
        cfg.check(
            compiler='cxx',
            features='cxx pyembed',
            uselib_store='PYBIND11HALDLS',
            mandatory=True,
            header_name='pybind11/pybind11.h',
        )

def build(bld):
    bld.env.DLSv2_HARDWARE_AVAILABLE = "dls" == os.environ.get("SLURM_JOB_PARTITION")
    bld.env.DLSvx_HARDWARE_AVAILABLE = "cube" == os.environ.get("SLURM_JOB_PARTITION")

    if not bld.env.with_pybind:
        bld.fatal('building pyhaldls requires pybind')

    bld(
        target='pystadls_v2',
        source='../include/stadls/v2/io.h',
        genpybind_tags='stadls_v2',
        features='genpybind cxx cxxshlib pyext',
        use=['stadls_v2', 'PYBIND11HALDLS', 'pylogging'],
        install_path='${PREFIX}/lib',
        linkflags='-Wl,-z,defs',
    )

    bld(
        name='pystadls_test_v2',
        tests='test/pystadls_test_v2.py',
        features='use pytest',
        use=['pyhalco_hicann_dls_v2', 'pystadls_v2', 'pyhaldls_v2', 'pyhalco_common_files'],
        install_path='${PREFIX}/bin',
        pythonpath=['test'],
    )

    bld(
        name='pystadls_hwtest_v2',
        tests='test/pystadls_hwtest_v2.py',
        features='use pytest',
        use=['pyhalco_hicann_dls_v2', 'pystadls_v2', 'pyhaldls_v2', 'pyhalco_common_files'],
        install_path='${PREFIX}/bin',
        pythonpath=['test'],
        skip_run=not bld.env.DLSv2_HARDWARE_AVAILABLE,
    )

    bld.add_post_fun(summary)
